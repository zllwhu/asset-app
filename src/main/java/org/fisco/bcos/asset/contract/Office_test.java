package org.fisco.bcos.asset.contract;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.DynamicStruct;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple2;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class Office_test extends Contract {
    public static final String[] BINARY_ARRAY = {"","ffffffffffffff1663fda69fae6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610ccd906124b2565b602060405180830381600087803b158015610ce757600080fd5b505af1158015610cfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d1f9190810190611e36565b8383815181101515610d2d57fe5b9060200190602002015160a00181815250508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610d92906125f1565b600060405180830381600087803b158015610dac57600080fd5b505af1158015610dc0573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610de99190810190611ea0565b8383815181101515610df757fe5b9060200190602002015160c001819052508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e5b906127a8565b600060405180830381600087803b158015610e7557600080fd5b505af1158015610e89573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610eb29190810190611ea0565b8383815181101515610ec057fe5b9060200190602002015160e001819052508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610f24906127fd565b600060405180830381600087803b158015610f3e57600080fd5b505af1158015610f52573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250610f7b9190810190611ea0565b8383815181101515610f8957fe5b9060200190602002015161010001819052508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610fee9061259c565b600060405180830381600087803b15801561100857600080fd5b505af115801561101c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506110459190810190611ea0565b838381518110151561105357fe5b9060200190602002015161012001819052508073ffffffffffffffffffffffffffffffffffffffff16639c981fcb6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016110b890612753565b600060405180830381600087803b1580156110d257600080fd5b505af11580156110e6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061110f9190810190611ea0565b838381518110151561111d57fe5b9060200190602002015161014001819052508180600101925050610816565b829650505050505050919050565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f23f63c96040805190810160405280600d81526020017f745f6f66666963655f74657374000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111fb9190612430565b602060405180830381600087803b15801561121557600080fd5b505af1158015611229573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061124d9190810190611e0d565b92508273ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156112b357600080fd5b505af11580156112c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112eb9190810190611de4565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b51686600001516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016113469190612646565b600060405180830381600087803b15801561136057600080fd5b505af1158015611374573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16632ef8ba7486602001516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016113d19190612725565b600060405180830381600087803b1580156113eb57600080fd5b505af11580156113ff573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b51686604001516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161145c91906126d0565b600060405180830381600087803b15801561147657600080fd5b505af115801561148a573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16632ef8ba7486606001516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114e7919061256e565b600060405180830381600087803b15801561150157600080fd5b505af1158015611515573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16632ef8ba7486608001516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115729190612520565b600060405180830381600087803b15801561158c57600080fd5b505af11580156115a0573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16632ef8ba748660a001516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115fd91906124d2565b600060405180830381600087803b15801561161757600080fd5b505af115801561162b573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168660c001516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016116889190612611565b600060405180830381600087803b1580156116a257600080fd5b505af11580156116b6573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168660e001516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161171391906127c8565b600060405180830381600087803b15801561172d57600080fd5b505af1158015611741573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168661010001516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161179f919061281d565b600060405180830381600087803b1580156117b957600080fd5b505af11580156117cd573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168661012001516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161182b91906125bc565b600060405180830381600087803b15801561184557600080fd5b505af1158015611859573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168661014001516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118b79190612773565b600060405180830381600087803b1580156118d157600080fd5b505af11580156118e5573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166331afac368660000151846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611944929190612482565b602060405180830381600087803b15801561195e57600080fd5b505af1158015611972573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119969190810190611e36565b905060018114156119e1577fc57b01fa77f41df77eaab79a0e2623fab2e7ae3e9530d9b1cab225ad65f2b7ce816040516119d09190612415565b60405180910390a160009350611a05565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93505b505050919050565b6101606040519081016040528060608152602001600081526020016060815260200160008152602001600081526020016000815260200160608152602001606081526020016060815260200160608152602001606081525090565b6000611a74825161293c565b905092915050565b6000611a88825161294e565b905092915050565b6000611a9c8251612960565b905092915050565b6000611ab08251612972565b905092915050565b6000611ac48235612984565b905092915050565b6000611ad88251612984565b905092915050565b600082601f8301121515611af357600080fd5b8135611b06611b018261287f565b612852565b91508082526020830160208301858383011115611b2257600080fd5b611b2d8382846129b2565b50505092915050565b600082601f8301121515611b4957600080fd5b8135611b5c611b57826128ab565b612852565b91508082526020830160208301858383011115611b7857600080fd5b611b838382846129b2565b50505092915050565b600082601f8301121515611b9f57600080fd5b8151611bb2611bad826128ab565b612852565b91508082526020830160208301858383011115611bce57600080fd5b611bd98382846129c1565b50505092915050565b60006101608284031215611bf557600080fd5b611c00610160612852565b9050600082013567ffffffffffffffff811115611c1c57600080fd5b611c2884828501611ae0565b6000830152506020611c3c84828501611ab8565b602083015250604082013567ffffffffffffffff811115611c5c57600080fd5b611c6884828501611ae0565b6040830152506060611c7c84828501611ab8565b6060830152506080611c908482","8501611ab8565b60808301525060a0611ca484828501611ab8565b60a08301525060c082013567ffffffffffffffff811115611cc457600080fd5b611cd084828501611ae0565b60c08301525060e082013567ffffffffffffffff811115611cf057600080fd5b611cfc84828501611ae0565b60e08301525061010082013567ffffffffffffffff811115611d1d57600080fd5b611d2984828501611ae0565b6101008301525061012082013567ffffffffffffffff811115611d4b57600080fd5b611d5784828501611ae0565b6101208301525061014082013567ffffffffffffffff811115611d7957600080fd5b611d8584828501611ae0565b6101408301525092915050565b600060208284031215611da457600080fd5b6000611db284828501611a68565b91505092915050565b600060208284031215611dcd57600080fd5b6000611ddb84828501611a7c565b91505092915050565b600060208284031215611df657600080fd5b6000611e0484828501611a90565b91505092915050565b600060208284031215611e1f57600080fd5b6000611e2d84828501611aa4565b91505092915050565b600060208284031215611e4857600080fd5b6000611e5684828501611acc565b91505092915050565b600060208284031215611e7157600080fd5b600082013567ffffffffffffffff811115611e8b57600080fd5b611e9784828501611b36565b91505092915050565b600060208284031215611eb257600080fd5b600082015167ffffffffffffffff811115611ecc57600080fd5b611ed884828501611b8c565b91505092915050565b60008060408385031215611ef457600080fd5b600083013567ffffffffffffffff811115611f0e57600080fd5b611f1a85828601611b36565b9250506020611f2b85828601611ab8565b9150509250929050565b600060208284031215611f4757600080fd5b600082013567ffffffffffffffff811115611f6157600080fd5b611f6d84828501611be2565b91505092915050565b6000611f81826128e4565b80845260208401935083602082028501611f9a856128d7565b60005b84811015611fd3578383038852611fb58383516122da565b9250611fc082612905565b9150602088019750600181019050611f9d565b508196508694505050505092915050565b611fed8161298e565b82525050565b611ffc816129a0565b82525050565b61200b81612932565b82525050565b600061201c826128fa565b8084526120308160208601602086016129c1565b612039816129f4565b602085010191505092915050565b6000612052826128ef565b8084526120668160208601602086016129c1565b61206f816129f4565b602085010191505092915050565b6000600e82527f6974656d5f73756d5f76616c75650000000000000000000000000000000000006020830152604082019050919050565b6000600a82527f6974656d5f7072696365000000000000000000000000000000000000000000006020830152604082019050919050565b6000600d82527f6974656d5f7175616e74697479000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f617070726f7665720000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600c82527f726563656970745f6461746500000000000000000000000000000000000000006020830152604082019050919050565b6000600982527f77617265686f75736500000000000000000000000000000000000000000000006020830152604082019050919050565b6000600982527f6974656d5f6e616d6500000000000000000000000000000000000000000000006020830152604082019050919050565b6000600282527f69640000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6164646974696f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000601282527f726563656970745f6465706172746d656e7400000000000000000000000000006020830152604082019050919050565b6000600e82527f726563656970745f706572736f6e0000000000000000000000000000000000006020830152604082019050919050565b60006101608301600083015184820360008601526122f88282612047565b915050602083015161230d6020860182612002565b50604083015184820360408601526123258282612047565b915050606083015161233a6060860182612002565b50608083015161234d6080860182612002565b5060a083015161236060a0860182612002565b5060c083015184820360c08601526123788282612047565b91505060e083015184820360e08601526123928282612047565b9150506101008301518482036101008601526123ae8282612047565b9150506101208301518482036101208601526123ca8282612047565b9150506101408301518482036101408601526123e68282612047565b9150508091505092915050565b6000602082019050818103600083015261240d8184611f76565b905092915050565b600060208201905061242a6000830184612002565b92915050565b6000602082019050818103600083015261244a8184612047565b905092915050565b6000604082019050818103600083015261246c8185612011565b905061247b6020830184611fe4565b9392505050565b6000604082019050818103600083015261249c8185612047565b90506124ab6020830184611ff3565b9392505050565b600060208201905081810360008301526124cb8161207d565b9050919050565b600060408201905081810360008301526124eb8161207d565b90506124fa6020830184612002565b92915050565b60006020820190508181036000830152612519816120b4565b9050919050565b60006040820190508181036000830152612539816120b4565b90506125486020830184612002565b92915050565b60006020820190508181036000830152612567816120eb565b9050919050565b60006040820190508181036000830152612587816120eb565b90506125966020830184612002565b92915050565b600060208201905081810360008301526125b581612122565b9050919050565b600060408201905081810360008301526125d581612122565b905081810360208301526125e98184612047565b905092915050565b6000602082019050818103600083015261260a81612159565b9050919050565b6000604082019050818103600083015261262a81612159565b9050818103602083015261263e8184612047565b905092915050565b6000604082019050818103600083015261265f81612190565b905081810360208301526126738184612047565b905092915050565b6000604082019050818103600083015261269481612190565b905081810360208301526126a88184612011565b905092915050565b600060208201905081810360008301526126c9816121c7565b9050919050565b600060408201905081810360008301526126e9816121c7565b905081810360208301526126fd8184612047565b905092915050565b6000602082019050818103600083015261271e816121fe565b9050919050565b6000604082019050818103600083015261273e816121fe565b905061274d6020830184612002565b92915050565b6000602082019050818103600083015261276c81612235565b9050919050565b6000604082019050818103600083015261278c81612235565b905081810360208301526127a08184612047565b905092915050565b600060208201905081810360008301526127c18161226c565b9050919050565b600060408201905081810360008301526127e18161226c565b905081810360208301526127f58184612047565b905092915050565b60006020820190508181036000830152612816816122a3565b9050919050565b60006040820190508181036000830152612836816122a3565b9050818103602083015261284a8184612047565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561287557600080fd5b8060405250919050565b600067ffffffffffffffff82111561289657600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156128c257600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061294782612912565b9050919050565b600061295982612912565b9050919050565b600061296b82612912565b9050919050565b600061297d82612912565b9050919050565b6000819050919050565b600061299982612912565b9050919050565b60006129ab82612912565b9050919050565b82818337600083830152505050565b60005b838110156129df5780820151818401526020810190506129c4565b838111156129ee576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a723058207c6980e6341fb1ad2500664704aebd6e3b8690e7c181bf619fd45670c6b93dc16c6578706572696d656e74616cf50037"};

    public static final String BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"60806040523480156200001157600080fd5b506110016000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c92a78016040805190810160405280600d81526020017f745f6f66666963655f74657374000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620001019190620002bc565b602060405180830381600087803b1580156200011c57600080fd5b505af115801562000131573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000157919081019062000174565b5062000366565b60006200016c825162000315565b905092915050565b6000602082840312156200018757600080fd5b600062000197848285016200015e565b91505092915050565b6000620001ad826200030a565b808452620001c38160208601602086016200031f565b620001ce8162000355565b602085010191505092915050565b6000607582527f69642c6974656d5f6e616d652c6974656d5f7175616e746974792c6974656d5f60208301527f70726963652c6974656d5f73756d5f76616c75652c726563656970745f64617460408301527f652c726563656970745f6465706172746d656e742c726563656970745f70657260608301527f736f6e2c617070726f7665722c6164646974696f6e0000000000000000000000608083015260a082019050919050565b6000600982527f77617265686f75736500000000000000000000000000000000000000000000006020830152604082019050919050565b60006060820190508181036000830152620002d88184620001a0565b90508181036020830152620002ed8162000285565b905081810360408301526200030281620001dc565b905092915050565b600081519050919050565b6000819050919050565b60005b838110156200033f57808201518184015260208101905062000322565b838111156200034f576000848401525b50505050565b6000601f19601f8301169050919050565b612a3f80620003766000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630fe1160f1461005c578063168b444b146100995780635b325d78146100d6575b600080fd5b34801561006857600080fd5b50610083600480360361007e9190810190611ee1565b610113565b6040516100909190612415565b60405180910390f35b3480156100a557600080fd5b506100c060048036036100bb9190810190611f35565b6104e5565b6040516100cd9190612415565b60405180910390f35b3480156100e257600080fd5b506100fd60048036036100f89190810190611e5f565b610da8565b60405161010a91906123f3565b60405180910390f35b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600d81526020017f745f6f66666963655f74657374000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016101c49190612430565b602060405180830381600087803b1580156101de57600080fd5b505af11580156101f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506102169190810190611e0d565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561027c57600080fd5b505af1158015610290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506102b49190810190611d92565b91508173ffffffffffffffffffffffffffffffffffffffff1663ae763db5876040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161030b9190612689565b600060405180830381600087803b15801561032557600080fd5b505af1158015610339573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663d62b54b4866040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610392919061272c565b600060405180830381600087803b1580156103ac57600080fd5b505af11580156103c0573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff166309ff42f087846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161041b929190612452565b602060405180830381600087803b15801561043557600080fd5b505af1158015610449573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061046d9190810190611e36565b905060018114156104b8577fe7769b56c2afa8e40381956f76b91d9ec19c34c0a81791702fdcae68e35a7271816040516104a79190612415565b60405180910390a1600093506104dc565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93505b50505092915050565b6000806000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600d81526020017f745f6f66666963655f74657374000000000000000000000000000000000000008152506040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016105969190612430565b602060405180830381600087803b1580156105b057600080fd5b505af11580156105c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506105e89190810190611e0d565b92508273ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561064e57600080fd5b505af1158015610662573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506106869190810190611de4565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb486600001516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016106e19190612654565b600060405180830381600087803b1580156106fb57600080fd5b505af115801561070f573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663def4269886602001516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161076c919061272c565b600060405180830381600087803b15801561078657600080fd5b505af115801561079a573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb486604001516040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016107f79190612520565b600060405180830381600087803b15801561081157600080fd5b505af1158015610825573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663def4269886606001516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161088291906127cf565b600060405180830381600087803b15801561089c57600080fd5b505af11580156108b0573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663def4269886608001516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161090d91906126de565b600060405180830381600087803b15801561092757600080fd5b505af115801561093b573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff1663def426988660a001516040518263ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161099891906124d2565b600060405180830381600087803b1580156109b257600080fd5b505af11580156109c6573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48660c001516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610a23919061261f565b600060405180830381600087803b158015610a3d57600080fd5b505af1158015610a51573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48660e001516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610aae91906125ca565b600060405180830381600087803b158015610ac857600080fd5b505af1158015610adc573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48661010001516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610b3a919061277a565b600060405180830381600087803b158015610b5457600080fd5b505af1158015610b68573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48661012001516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610bc6919061281d565b600060405180830381600087803b158015610be057600080fd5b505af1158015610bf4573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48661014001516040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610c529190612575565b600060405180830381600087803b158015610c6c57600080fd5b505af1158015610c80573d6000803e3d6000fd5b505050508273ffffff","ffffffffffffffffffffffffffffffffff16634c6f30c08660000151846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610cdf929190612482565b602060405180830381600087803b158015610cf957600080fd5b505af1158015610d0d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610d319190810190611e36565b90506001811415610d7c577fdfc533ec2b52797a1229dc2495dbd3f4948f7c4c982ec077ad9d80810ec5c1f981604051610d6b9190612415565b60405180910390a160009350610da0565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff93505b505050919050565b6060600080600060606000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359a48b656040805190810160405280600d81526020017f745f6f66666963655f74657374000000000000000000000000000000000000008152506040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610e5f9190612430565b602060405180830381600087803b158015610e7957600080fd5b505af1158015610e8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610eb19190810190611e0d565b95508573ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610f1757600080fd5b505af1158015610f2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610f4f9190810190611d92565b94508573ffffffffffffffffffffffffffffffffffffffff1663d8ac595789876040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401610fa8929190612452565b602060405180830381600087803b158015610fc257600080fd5b505af1158015610fd6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ffa9190810190611dbb565b93508373ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561106057600080fd5b505af1158015611074573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506110989190810190611e36565b6040519080825280602002602001820160405280156110d157816020015b6110be611a0d565b8152602001906001900390816110b65790505b509250600091505b8373ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561113d57600080fd5b505af1158015611151573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111759190810190611e36565b8212156119ff578373ffffffffffffffffffffffffffffffffffffffff16633dd2b614836040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016111d19190612415565b602060405180830381600087803b1580156111eb57600080fd5b505af11580156111ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112239190810190611de4565b90508073ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016112789061270c565b602060405180830381600087803b15801561129257600080fd5b505af11580156112a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112ca9190810190611e36565b83838151811015156112d857fe5b9060200190602002015160200181815250508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161133d90612500565b600060405180830381600087803b15801561135757600080fd5b505af115801561136b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506113949190810190611ea0565b83838151811015156113a257fe5b90602001906020020151604001819052508073ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611406906127af565b602060405180830381600087803b15801561142057600080fd5b505af1158015611434573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506114589190810190611e36565b838381518110151561146657fe5b9060200190602002015160600181815250508073ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016114cb906126be565b602060405180830381600087803b1580156114e557600080fd5b505af11580156114f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061151d9190810190611e36565b838381518110151561152b57fe5b9060200190602002015160800181815250508073ffffffffffffffffffffffffffffffffffffffff16634900862e6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611590906124b2565b602060405180830381600087803b1580156115aa57600080fd5b505af11580156115be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115e29190810190611e36565b83838151811015156115f057fe5b9060200190602002015160a00181815250508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611655906125ff565b600060405180830381600087803b15801561166f57600080fd5b505af1158015611683573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506116ac9190810190611ea0565b83838151811015156116ba57fe5b9060200190602002015160c001819052508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161171e906125aa565b600060405180830381600087803b15801561173857600080fd5b505af115801561174c573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506117759190810190611ea0565b838381518110151561178357fe5b9060200190602002015160e001819052508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117e79061275a565b600060405180830381600087803b15801561180157600080fd5b505af1158015611815573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525061183e9190810190611ea0565b838381518110151561184c57fe5b9060200190602002015161010001819052508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016118b1906127fd565b600060405180830381600087803b1580156118cb57600080fd5b505af11580156118df573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506119089190810190611ea0565b838381518110151561191657fe5b9060200190602002015161012001819052508073ffffffffffffffffffffffffffffffffffffffff16639bca41e86040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161197b90612555565b600060405180830381600087803b15801561199557600080fd5b505af11580156119a9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506119d29190810190611ea0565b83838151811015156119e057fe5b90602001906020020151610140018190525081806001019250506110d9565b829650505050505050919050565b6101606040519081016040528060608152602001600081526020016060815260200160008152602001600081526020016000815260200160608152602001606081526020016060815260200160608152602001606081525090565b6000611a74825161293c565b905092915050565b6000611a88825161294e565b905092915050565b6000611a9c8251612960565b905092915050565b6000611ab08251612972565b905092915050565b6000611ac48235612984565b905092915050565b6000611ad88251612984565b905092915050565b600082601f8301121515611af357600080fd5b8135611b06611b018261287f565b612852565b91508082526020830160208301858383011115611b2257600080fd5b611b2d8382846129b2565b50505092915050565b600082601f8301121515611b4957600080fd5b8135611b5c611b57826128ab565b612852565b91508082526020830160208301858383011115611b7857600080fd5b611b838382846129b2565b50505092915050565b600082601f8301121515611b9f57600080fd5b8151611bb2611bad826128ab565b612852565b91508082526020830160208301858383011115611bce57600080fd5b611bd98382846129c1565b50505092915050565b60006101608284031215611bf557600080fd5b611c00610160612852565b9050600082013567ffffffffffffffff811115611c1c57600080fd5b611c2884828501611ae0565b6000830152506020611c3c84828501611ab8565b602083015250604082013567ffffffffffffffff811115611c5c57600080fd5b611c6884828501611ae0565b6040830152506060611c7c84828501611ab8565b6060830152506080611c908482","8501611ab8565b60808301525060a0611ca484828501611ab8565b60a08301525060c082013567ffffffffffffffff811115611cc457600080fd5b611cd084828501611ae0565b60c08301525060e082013567ffffffffffffffff811115611cf057600080fd5b611cfc84828501611ae0565b60e08301525061010082013567ffffffffffffffff811115611d1d57600080fd5b611d2984828501611ae0565b6101008301525061012082013567ffffffffffffffff811115611d4b57600080fd5b611d5784828501611ae0565b6101208301525061014082013567ffffffffffffffff811115611d7957600080fd5b611d8584828501611ae0565b6101408301525092915050565b600060208284031215611da457600080fd5b6000611db284828501611a68565b91505092915050565b600060208284031215611dcd57600080fd5b6000611ddb84828501611a7c565b91505092915050565b600060208284031215611df657600080fd5b6000611e0484828501611a90565b91505092915050565b600060208284031215611e1f57600080fd5b6000611e2d84828501611aa4565b91505092915050565b600060208284031215611e4857600080fd5b6000611e5684828501611acc565b91505092915050565b600060208284031215611e7157600080fd5b600082013567ffffffffffffffff811115611e8b57600080fd5b611e9784828501611b36565b91505092915050565b600060208284031215611eb257600080fd5b600082015167ffffffffffffffff811115611ecc57600080fd5b611ed884828501611b8c565b91505092915050565b60008060408385031215611ef457600080fd5b600083013567ffffffffffffffff811115611f0e57600080fd5b611f1a85828601611b36565b9250506020611f2b85828601611ab8565b9150509250929050565b600060208284031215611f4757600080fd5b600082013567ffffffffffffffff811115611f6157600080fd5b611f6d84828501611be2565b91505092915050565b6000611f81826128e4565b80845260208401935083602082028501611f9a856128d7565b60005b84811015611fd3578383038852611fb58383516122da565b9250611fc082612905565b9150602088019750600181019050611f9d565b508196508694505050505092915050565b611fed8161298e565b82525050565b611ffc816129a0565b82525050565b61200b81612932565b82525050565b600061201c826128fa565b8084526120308160208601602086016129c1565b612039816129f4565b602085010191505092915050565b6000612052826128ef565b8084526120668160208601602086016129c1565b61206f816129f4565b602085010191505092915050565b6000600e82527f6974656d5f73756d5f76616c75650000000000000000000000000000000000006020830152604082019050919050565b6000600982527f6974656d5f6e616d6500000000000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f6164646974696f6e0000000000000000000000000000000000000000000000006020830152604082019050919050565b6000601282527f726563656970745f6465706172746d656e7400000000000000000000000000006020830152604082019050919050565b6000600c82527f726563656970745f6461746500000000000000000000000000000000000000006020830152604082019050919050565b6000600982527f77617265686f75736500000000000000000000000000000000000000000000006020830152604082019050919050565b6000600a82527f6974656d5f7072696365000000000000000000000000000000000000000000006020830152604082019050919050565b6000600282527f69640000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000600e82527f726563656970745f706572736f6e0000000000000000000000000000000000006020830152604082019050919050565b6000600d82527f6974656d5f7175616e74697479000000000000000000000000000000000000006020830152604082019050919050565b6000600882527f617070726f7665720000000000000000000000000000000000000000000000006020830152604082019050919050565b60006101608301600083015184820360008601526122f88282612047565b915050602083015161230d6020860182612002565b50604083015184820360408601526123258282612047565b915050606083015161233a6060860182612002565b50608083015161234d6080860182612002565b5060a083015161236060a0860182612002565b5060c083015184820360c08601526123788282612047565b91505060e083015184820360e08601526123928282612047565b9150506101008301518482036101008601526123ae8282612047565b9150506101208301518482036101208601526123ca8282612047565b9150506101408301518482036101408601526123e68282612047565b9150508091505092915050565b6000602082019050818103600083015261240d8184611f76565b905092915050565b600060208201905061242a6000830184612002565b92915050565b6000602082019050818103600083015261244a8184612047565b905092915050565b6000604082019050818103600083015261246c8185612011565b905061247b6020830184611fe4565b9392505050565b6000604082019050818103600083015261249c8185612047565b90506124ab6020830184611ff3565b9392505050565b600060208201905081810360008301526124cb8161207d565b9050919050565b600060408201905081810360008301526124eb8161207d565b90506124fa6020830184612002565b92915050565b60006020820190508181036000830152612519816120b4565b9050919050565b60006040820190508181036000830152612539816120b4565b9050818103602083015261254d8184612047565b905092915050565b6000602082019050818103600083015261256e816120eb565b9050919050565b6000604082019050818103600083015261258e816120eb565b905081810360208301526125a28184612047565b905092915050565b600060208201905081810360008301526125c381612122565b9050919050565b600060408201905081810360008301526125e381612122565b905081810360208301526125f78184612047565b905092915050565b6000602082019050818103600083015261261881612159565b9050919050565b6000604082019050818103600083015261263881612159565b9050818103602083015261264c8184612047565b905092915050565b6000604082019050818103600083015261266d81612190565b905081810360208301526126818184612047565b905092915050565b600060408201905081810360008301526126a281612190565b905081810360208301526126b68184612011565b905092915050565b600060208201905081810360008301526126d7816121c7565b9050919050565b600060408201905081810360008301526126f7816121c7565b90506127066020830184612002565b92915050565b60006020820190508181036000830152612725816121fe565b9050919050565b60006040820190508181036000830152612745816121fe565b90506127546020830184612002565b92915050565b6000602082019050818103600083015261277381612235565b9050919050565b6000604082019050818103600083015261279381612235565b905081810360208301526127a78184612047565b905092915050565b600060208201905081810360008301526127c88161226c565b9050919050565b600060408201905081810360008301526127e88161226c565b90506127f76020830184612002565b92915050565b60006020820190508181036000830152612816816122a3565b9050919050565b60006040820190508181036000830152612836816122a3565b9050818103602083015261284a8184612047565b905092915050565b6000604051905081810181811067ffffffffffffffff8211171561287557600080fd5b8060405250919050565b600067ffffffffffffffff82111561289657600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff8211156128c257600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061294782612912565b9050919050565b600061295982612912565b9050919050565b600061296b82612912565b9050919050565b600061297d82612912565b9050919050565b6000819050919050565b600061299982612912565b9050919050565b60006129ab82612912565b9050919050565b82818337600083830152505050565b60005b838110156129df5780820151818401526020810190506129c4565b838111156129ee576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a7230582067a9c739f66270fabf35c0c7b0b6c4788eb2462d3684fb21819d21a00c24e03f6c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":false,\"inputs\":[{\"name\":\"warehouse\",\"type\":\"string\"},{\"name\":\"id\",\"type\":\"int256\"}],\"name\":\"remove\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"warehouse\",\"type\":\"string\"}],\"name\":\"select\",\"outputs\":[{\"components\":[{\"name\":\"warehouse\",\"type\":\"string\"},{\"name\":\"id\",\"type\":\"int256\"},{\"name\":\"item_name\",\"type\":\"string\"},{\"name\":\"item_quantity\",\"type\":\"int256\"},{\"name\":\"item_price\",\"type\":\"int256\"},{\"name\":\"item_sum_value\",\"type\":\"int256\"},{\"name\":\"receipt_date\",\"type\":\"string\"},{\"name\":\"receipt_department\",\"type\":\"string\"},{\"name\":\"receipt_person\",\"type\":\"string\"},{\"name\":\"approver\",\"type\":\"string\"},{\"name\":\"addition\",\"type\":\"string\"}],\"name\":\"\",\"type\":\"tuple[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"warehouse\",\"type\":\"string\"},{\"name\":\"id\",\"type\":\"int256\"},{\"name\":\"item_name\",\"type\":\"string\"},{\"name\":\"item_quantity\",\"type\":\"int256\"},{\"name\":\"item_price\",\"type\":\"int256\"},{\"name\":\"item_sum_value\",\"type\":\"int256\"},{\"name\":\"receipt_date\",\"type\":\"string\"},{\"name\":\"receipt_department\",\"type\":\"string\"},{\"name\":\"receipt_person\",\"type\":\"string\"},{\"name\":\"approver\",\"type\":\"string\"},{\"name\":\"addition\",\"type\":\"string\"}],\"name\":\"item\",\"type\":\"tuple\"}],\"name\":\"record\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"count\",\"type\":\"int256\"}],\"name\":\"InsertResult\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"count\",\"type\":\"int256\"}],\"name\":\"RemoveResult\",\"type\":\"event\"}]"};

    public static final String ABI = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", ABI_ARRAY);

    public static final String FUNC_REMOVE = "remove";

    public static final String FUNC_SELECT = "select";

    public static final String FUNC_RECORD = "record";

    public static final Event INSERTRESULT_EVENT = new Event("InsertResult", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
    ;

    public static final Event REMOVERESULT_EVENT = new Event("RemoveResult", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
    ;

    protected Office_test(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public TransactionReceipt remove(String warehouse, BigInteger id) {
        final Function function = new Function(
                FUNC_REMOVE, 
                Arrays.<Type>asList(new Utf8String(warehouse),
                new Int256(id)),
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] remove(String warehouse, BigInteger id, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_REMOVE, 
                Arrays.<Type>asList(new Utf8String(warehouse),
                new Int256(id)),
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRemove(String warehouse, BigInteger id) {
        final Function function = new Function(
                FUNC_REMOVE, 
                Arrays.<Type>asList(new Utf8String(warehouse),
                new Int256(id)),
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple2<String, BigInteger> getRemoveInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_REMOVE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple2<String, BigInteger>(

                (String) results.get(0).getValue(), 
                (BigInteger) results.get(1).getValue()
                );
    }

    public Tuple1<BigInteger> getRemoveOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_REMOVE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<Struct0> select(String warehouse) throws ContractException {
        final Function function = new Function(FUNC_SELECT, 
                Arrays.<Type>asList(new Utf8String(warehouse)),
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Struct0>>() {}));
        return executeCallWithSingleValueReturn(function, List.class);
    }

    public TransactionReceipt record(Struct0 item) {
        final Function function = new Function(
                FUNC_RECORD, 
                Arrays.<Type>asList(item), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] record(Struct0 item, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_RECORD, 
                Arrays.<Type>asList(item), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForRecord(Struct0 item) {
        final Function function = new Function(
                FUNC_RECORD, 
                Arrays.<Type>asList(item), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<Struct0> getRecordInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_RECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Struct0>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Struct0>(

                (Struct0) results.get(0)
                );
    }

    public Tuple1<BigInteger> getRecordOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_RECORD, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Int256>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<BigInteger>(

                (BigInteger) results.get(0).getValue()
                );
    }

    public List<InsertResultEventResponse> getInsertResultEvents(
            TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(INSERTRESULT_EVENT, transactionReceipt);
        ArrayList<InsertResultEventResponse> responses = new ArrayList<InsertResultEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            InsertResultEventResponse typedResponse = new InsertResultEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.count = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeInsertResultEvent(String fromBlock, String toBlock,
            List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTRESULT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeInsertResultEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERTRESULT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<RemoveResultEventResponse> getRemoveResultEvents(
            TransactionReceipt transactionReceipt) {
        List<EventValuesWithLog> valueList = extractEventParametersWithLog(REMOVERESULT_EVENT, transactionReceipt);
        ArrayList<RemoveResultEventResponse> responses = new ArrayList<RemoveResultEventResponse>(valueList.size());
        for (EventValuesWithLog eventValues : valueList) {
            RemoveResultEventResponse typedResponse = new RemoveResultEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.count = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeRemoveResultEvent(String fromBlock, String toBlock,
            List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(REMOVERESULT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeRemoveResultEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(REMOVERESULT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static Office_test load(String contractAddress, Client client,
            CryptoKeyPair credential) {
        return new Office_test(contractAddress, client, credential);
    }

    public static Office_test deploy(Client client, CryptoKeyPair credential) throws
            ContractException {
        return deploy(Office_test.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class Struct0 extends DynamicStruct {
        public String warehouse;

        public BigInteger id;

        public String item_name;

        public BigInteger item_quantity;

        public BigInteger item_price;

        public BigInteger item_sum_value;

        public String receipt_date;

        public String receipt_department;

        public String receipt_person;

        public String approver;

        public String addition;

        public Struct0(Utf8String warehouse, Int256 id, Utf8String item_name, Int256 item_quantity,
                Int256 item_price, Int256 item_sum_value, Utf8String receipt_date,
                Utf8String receipt_department, Utf8String receipt_person, Utf8String approver,
                Utf8String addition) {
            super(warehouse,id,item_name,item_quantity,item_price,item_sum_value,receipt_date,receipt_department,receipt_person,approver,addition);
            this.warehouse = warehouse.getValue();
            this.id = id.getValue();
            this.item_name = item_name.getValue();
            this.item_quantity = item_quantity.getValue();
            this.item_price = item_price.getValue();
            this.item_sum_value = item_sum_value.getValue();
            this.receipt_date = receipt_date.getValue();
            this.receipt_department = receipt_department.getValue();
            this.receipt_person = receipt_person.getValue();
            this.approver = approver.getValue();
            this.addition = addition.getValue();
        }

        public Struct0(String warehouse, BigInteger id, String item_name, BigInteger item_quantity,
                BigInteger item_price, BigInteger item_sum_value, String receipt_date,
                String receipt_department, String receipt_person, String approver,
                String addition) {
            super(new Utf8String(warehouse),new Int256(id),new Utf8String(item_name),new Int256(item_quantity),new Int256(item_price),new Int256(item_sum_value),new Utf8String(receipt_date),new Utf8String(receipt_department),new Utf8String(receipt_person),new Utf8String(approver),new Utf8String(addition));
            this.warehouse = warehouse;
            this.id = id;
            this.item_name = item_name;
            this.item_quantity = item_quantity;
            this.item_price = item_price;
            this.item_sum_value = item_sum_value;
            this.receipt_date = receipt_date;
            this.receipt_department = receipt_department;
            this.receipt_person = receipt_person;
            this.approver = approver;
            this.addition = addition;
        }
    }

    public static class InsertResultEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger count;
    }

    public static class RemoveResultEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger count;
    }
}
